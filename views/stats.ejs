<%
const isEnchanted = item => {
    if(item.animated)
        return false;

    if(item.id == 399)
        return true;

    if('texture_path' in item && item.texture_path.endsWith('.gif')) // disable enchanted overlay for gifs cause laggy
        return false;

    if('id' in item && [403, 384].includes(item.id))
        return true;

    if('tag' in item && Array.isArray(item.tag.ench))
        return true;

    return false;
};

const itemIcon = (item, classes) => { %>
    <div
        <% if(item.texture_path){ %> style='background-image: url("<%= item.texture_path %>")' <% } %>
        class="<%= classes.join(" ") %> item-icon <% if(isEnchanted(item)){ %>is-enchanted <% } %> <% if(item.texture_path){ %>custom-icon<% } %> icon-<%= item.id %>_<%= item.Damage %>">
    </div>
<% };

const inventorySlot = item => { %>
    <div class="inventory-slot">
        <% if(Object.keys(item).length > 1){ %>
        <div class="rich-item inventory-item" data-item-index="<%= item.item_index %>">
            <% itemIcon(item, ['piece-icon']); %>
            <% if(item.Count != 1){ %><div class="item-count"><%= item.Count %></div><% } %>
        </div>
        <% } %>
    </div>
<% };

const skill_component = (skill, icon, level) => { %>
    <div class="skill">
        <div class="skill-icon"><div class="item-icon <%= icon %>"></div></div>
        <div class="skill-name"><%= skill %> <span class="skill-level"><%= level.level %></span></div>
        <div class="skill-bar">
            <div class="skill-progress-bar" style="width: <%= level.level == level.maxLevel ? 100 : level.progress * 100 %>%"></div>
            <div class="skill-progress-text">
                <%= helper.formatNumber(level.xpCurrent, true) %><% if(level.xpForNext != Infinity){ %> / <%= helper.formatNumber(level.xpForNext) %><% } %> XP
            </div>
        </div>
    </div>
<% };

let description = "";

if('levels' in calculated){
    let stats = calculated.stats;

    if(items.highest_rarity_sword)
        stats = calculated.weapon_stats[items.highest_rarity_sword.item_index];

    description += `❤️ ${stats.health} 🛡️ ${stats.defense} 💪 ${stats.strength} 🌀 ${stats.crit_chance}% ☠️ ${stats.crit_damage}%\n\n`;
}

description += `🧚 ${calculated.fairy_souls.collected}/${calculated.fairy_souls.total} Fairy Souls\n`;

if(items.armor_set)
    description += `🛡️ ${items.armor_set}\n`;

if(items.highest_rarity_sword){
    let swordName = items.highest_rarity_sword.display_name;
    if(items.highest_rarity_sword.tag.ExtraAttributes.id == 'MIDAS_SWORD')
        swordName = swordName.replace("Midas", `${helper.formatNumber(items.highest_rarity_sword.tag.ExtraAttributes.winning_bid, true, 1)} Midas`);

    description += `🗡️ ${swordName}\n`;
 }

if(items.highest_rarity_bow)
    description += `🏹 ${items.highest_rarity_bow.display_name}\n`;

const skillEmojis = {
    "alchemy": "⚗️",
    "carpentry": "🪑",
    "combat": "⚔️",
    "enchanting": "🔮",
    "farming": "🌾",
    "fishing": "🎣",
    "foraging": "🌳",
    "mining": "⛏️",
    "runecrafting": "✨"
}

if('levels' in calculated){
    let { levels } = calculated;

    let skillsSorted = Object.keys(levels).sort((a, b) =>
        (levels[b].level + levels[b].progress) - (levels[a].level + levels[a].progress)
    );

    for(let i = 0; i < 2; i++){
        let skill = skillsSorted[i];
        let skillName = skill.charAt(0).toUpperCase() + skill.slice(1);

        if(levels[skill].level == 0)
            break;

        description += `${skillEmojis[skill]} ${skillName} ${levels[skill].level}\n`;
    }
}

description += `\n`;

if(calculated.average_level)
    description += `⚒ Average Skill Level: ${calculated.average_level} `;

description += `💰 Purse: ${helper.formatNumber(calculated.purse, true)} Coins`;

if(calculated.bank)
    description += `\n🏦 Bank Account: ${helper.formatNumber(calculated.bank, true)} Coins`;

%>
<!DOCTYPE html>
<html>
<head>
    <%- include('../includes/resources') %>
    <title><%- calculated.display_name %> | SkyBlock Stats</title>
    <link rel="shortcut icon" href="https://visage.surgeplay.com/face/32/<%- calculated.uuid %>" type="image/png">
    <meta property="og:title" content="<%- calculated.display_name %>">
    <meta property="og:image" content="https://visage.surgeplay.com/face/256/<%- calculated.uuid %>">
    <meta property="og:description" content="<%= description %>">
</head>
<body>
    <%- include('../includes/header') %>
    <div id="dimmer"></div>
    <video id="enable_api" loop>
        <source type="video/webm" src="/resources/video/enable_api.webm"></source>
        <source type="video/mp4" src="/resources/video/enable_api.mp4"></source>
    </video>
    <div id="bg_blur"></div>
    <div id="stats_content">
        <div class="item-name">
            <div></div><span></span><div class="close-lore"></div></div>
        <div class="item-lore"></div>
        <div class="backpack-contents"></div>
    </div>
    <div id="stats_display">
        <div id="player_model" style="background-image: url(https://visage.surgeplay.com/full/832/<%= calculated.uuid %>)"></div>
    </div>
    <div id="wrapper">
        <div id="player_profile"><span class="text-stats-for">Stats for</span>
            <div tabindex="1" id="stats_for_player">
                <%= calculated.display_name %>
                <div id="other_players">
                    <% calculated.members.forEach(member => { %>
                        <a class="goto" href="/stats/<%= member.uuid %>/<%= calculated.profile.profile_id %>"><%= member.display_name %></a>
                    <% }); %>
                    <input type="text" id="enter_player" placeholder="Enter username"><a id="goto_player"></a>
                </div>
            </div><span class="text-on"> on </span><div tabindex="2" id="stats_for_profile">
                <%= calculated.profile.cute_name %>
                <div id="other_profiles">
                    <% for(let profile_id in calculated.profiles){ %>
                        <% let _profile = calculated.profiles[profile_id]; %>
                        <a class="goto" href="/stats/<%= calculated.uuid %>/<%= _profile.profile_id %>"><%= _profile.cute_name %></a>
                    <% } %>
                </div>
            </div>
        </div>
        <div id="basic_stats">
            <%
                let stats = Object.assign({}, calculated.stats);
                let sword = items.weapons.slice().sort((a, b) => a.item_index - b.item_index);

                if(items.highest_rarity_sword)
                    sword = [items.highest_rarity_sword];

                if(sword.length > 0)
                    stats = calculated.weapon_stats[sword[0].item_index];
            %>

            <div id="base_stats_container">
                <div data-stat="health" class="basic-stat stat-health" data-tippy-content="Base Health: <%= calculated.base_stats.health %> HP
                <div class='tippy-explanation'>Increased by collecting Fairy Souls, leveling your Farming and Fishing skills and leveling up in Zombie or Wolf Slayer.</div>
                Bonus Health: +<%= stats.health - calculated.base_stats.health %> HP
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Health</span><span class="stat-value"><%= stats.health %></span></div>
                <div data-stat="defense" class="basic-stat stat-defense" data-tippy-content="Base Defense: <%= calculated.base_stats.defense %>
                <div class='tippy-explanation'>Increased by collecting Fairy Souls and leveling your Mining skill.</div>
                Bonus Defense: +<%= stats.defense - calculated.base_stats.defense %>
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Defense</span><span class="stat-value"><%= stats.defense %></span></div>
                <div data-stat="effective_health" class="basic-stat stat-effective-health"  data-tippy-content="Effective Health based on Health + Defense.
                <div class='tippy-explanation'>→ Formula: Health * (1 + Defense / 100)</div>"><span class="stat-name">Effective HP</span><span class="stat-value"><%= stats.effective_health %></span></div>
                <div data-stat="strength" class="basic-stat stat-strength" data-tippy-content="Base Strength: <%= calculated.base_stats.strength %>
                <div class='tippy-explanation'>Increased by collecting Fairy Souls and leveling your Foraging skill.</div>
                Bonus Strength: +<%= stats.strength - calculated.base_stats.strength %>
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Strength</span><span class="stat-value"><%= stats.strength %></span></div>
                <div data-stat="speed" class="basic-stat stat-speed" data-tippy-content="Base Speed: <%= calculated.base_stats.speed %>%
                <div class='tippy-explanation'>Increased by collecting Fairy Souls.</div>
                Bonus Speed: +<%= stats.speed - calculated.base_stats.speed %>%
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Speed</span><span class="stat-value"><%= stats.speed %></span>%</div>
                <div data-stat="crit_chance" class="basic-stat stat-crit-chance" data-tippy-content="Base Crit Chance: <%= calculated.base_stats.crit_chance %>%
                <div class='tippy-explanation'>Increased by leveling your Combat skill.</div>
                Bonus Crit Chance: +<%= stats.crit_chance - calculated.base_stats.crit_chance %>%
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Crit Chance</span><span class="stat-value"><%= stats.crit_chance %></span>%</div>
                <div data-stat="crit_damage" class="basic-stat stat-crit-damage" data-tippy-content="Base Crit Damage: <%= calculated.base_stats.crit_damage %>%
                <div class='tippy-explanation'>Increased by leveling up in Spider or Wolf Slayer.</div>
                Bonus Crit Damage: +<%= stats.crit_damage - calculated.base_stats.crit_damage %>%
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Crit Damage</span><span class="stat-value"><%= stats.crit_damage %></span>%</div>
                <div data-stat="intelligence" class="basic-stat stat-intelligence" data-tippy-content="Base Intelligence: <%= calculated.base_stats.intelligence %>
                <div class='tippy-explanation'>Increased by leveling your Enchanting and Alchemy skills and completing songs on Melody's Harp.</div>
                Bonus Intelligence: +<%= stats.intelligence - calculated.base_stats.intelligence %>
                <div class='tippy-explanation'>Additional bonuses from Armor, held items and Accessories.</div>"><span class="stat-name">Intelligence</span><span class="stat-value"><%= stats.intelligence %></span></div>
                <div id="player_model_mobile" style="background-image: url(https://visage.surgeplay.com/full/832/<%= calculated.uuid %>)"></div>
                <div id="additional_stats_container">
                    <div class="additional-stat" data-tippy-content="Last updated on <%= moment(calculated.last_updated.unix).format('D MMMM YYYY HH:mm') %>"><span class="stat-name">Last Updated</span><span class="stat-value"><%= calculated.last_updated.text %></span></div>
                    <div class="additional-stat" data-tippy-content="Joined on <%= moment(calculated.first_join.unix).format('D MMMM YYYY HH:mm') %>"><span class="stat-name">Joined</span><span class="stat-value"><%= calculated.first_join.text %></span></div>
                    <div class="additional-stat"><span class="stat-name">Purse</span><span class="stat-value"><%= Math.round(calculated.purse).toLocaleString() %> Coins</span></div>
                    <% if('bank' in calculated){ %>
                        <div class="additional-stat"><span class="stat-name">Bank Account</span><span class="stat-value"><%= Math.round(calculated.bank).toLocaleString() %> Coins</span></div>
                    <% } %>
                    <% if('levels' in calculated){ %>
                        <div class="additional-stat" data-tippy-content="Average skill level over all skills except Carpentry and Runecrafting, includes progress to next level."><span class="stat-name">Average Skill Level</span><span class="stat-value"><%= calculated.average_level %></span></div>
                    <% } %>
                </div>
            </div>

            <div id="skill_levels_container">
                <div class="skill">
                    <div class="skill-icon"><div class="item-icon" style="background: url(/head/b96923ad247310007f6ae5d326d847ad53864cf16c3565a181dc8e6b20be2387) center no-repeat"></div></div>
                    <div class="skill-name">Fairy Souls <span class="skill-level"><%= calculated.fairy_souls.collected %></span></div>
                    <div class="skill-bar">
                        <div class="skill-progress-bar" style="width: <%= calculated.fairy_souls.progress * 100 %>%"></div>
                        <div class="skill-progress-text"><%= calculated.fairy_souls.collected %> / <%= calculated.fairy_souls.total %> Fairy Souls</div>
                    </div>
                </div>

                <%
                    if('levels' in calculated){
                %>
                    <div id="other_skills">
                        <%= skill_component('Farming', 'icon-294_0', calculated.levels.farming) %>
                        <%= skill_component('Mining', 'icon-274_0', calculated.levels.mining) %>
                        <%= skill_component('Combat', 'icon-272_0', calculated.levels.combat) %>
                        <%= skill_component('Foraging', 'icon-6_3', calculated.levels.foraging) %>
                        <%= skill_component('Fishing', 'icon-346_0', calculated.levels.fishing) %>
                        <%= skill_component('Enchanting', 'icon-116_0', calculated.levels.enchanting) %>
                        <%= skill_component('Alchemy', 'icon-379_0', calculated.levels.alchemy) %>
                        <%= skill_component('Carpentry', 'icon-58_0', calculated.levels.carpentry) %>
                        <%= skill_component('Runecrafting', 'icon-378_0', calculated.levels.runecrafting) %>
                    </div>
                    <div id="show_skills">Show skills</div>
                <% }else{ %>
                    <div class="no-access"><%= calculated.display_name %> doesn't have skills access via API enabled. <a target="_blank" class="enable-api" href="/resources/video/enable_api.webm">See here</a> how to enable full API access.</div>
                <% } %>
            </div>
        </div>
        <% if(items.no_inventory){ %>
            <div class="info-container-wrapper">
                <div class="info-container">
                    <div class="info-header">Notice</div>
                    Weapons, Accessories and Inventory not available for <%= calculated.display_name %> due to limited API access.<br><span><a target="_blank" class="enable-api" href="/resources/video/enable_api.webm">See here</a> how to enable full API access.</span>
                </div>
            </div>
        <% } %>
        <div class="stat-container stat-armor">
            <div class="stat-header">Armor</div>
            <% if(items.armor.length == 0){ %>
                <div class="no-access"><%= calculated.display_name %> doesn't have any armor equipped.</div>
            <% }else{ %>
                <div class="pieces">
                    <% items.armor.slice().reverse().forEach(item => { %>
                        <div tabindex="3" data-item-index="<%= item.item_index %>" class="rich-item piece piece-<%= item.rarity %>-bg">
                            <% if(item.rarity == 'legendary'){ %>
                                <div class="piece-shine"></div>
                            <% } %>
                            <div class="piece-hover-area"></div>
                            <% itemIcon(item, ['piece-icon']); %>
                        </div>
                    <% }) %>
                </div>
            <% } %>
        </div>
        <% if(!items.no_inventory){ %>
            <div class="stat-container stat-weapons">
                <div class="stat-header">Weapons</div>
                <% if(items.weapons.length == 0){ %>
                    <div class="no-access"><%= calculated.display_name %> doesn't have any weapons.</div>
                <% }else{ %>
                    <div class="pieces">
                        <%
                            let sword = items.weapons.slice().sort((a, b) => a.item_index - b.item_index);

                            if(items.highest_rarity_sword)
                                sword = [items.highest_rarity_sword];

                            items.weapons.forEach(item => { %>
                                <div tabindex="3" data-item-index="<%= item.item_index %>" class="rich-item piece
                                    <% if(sword.length > 0 && item.item_index == sword[0].item_index){ %>piece-selected<% } %>
                                    piece-<%= item.rarity %>-bg">
                                    <% if(item.rarity == 'legendary'){ %>
                                        <div class="piece-shine"></div>
                                    <% } %>
                                    <div class="piece-hover-area"></div>
                                    <div class="select-weapon"></div>
                                    <% itemIcon(item, ['piece-icon']); %>
                                </div>
                        <%
                            });
                        %>
                    </div>
                <% } %>
            </div>
            <div class="stat-container stat-accessories">
                <div class="stat-header">Accessories</div>
                <% if(items.no_inventory){ %>
                    <div class="no-access"><%= calculated.display_name %> doesn't have inventory access via API enabled. <a target="_blank" class="enable-api" href="/resources/video/enable_api.webm">See here</a> how to enable full API access.</div>
                <% }else if(items.talismans.length == 0){ %>
                    <div class="no-access"><%= calculated.display_name %> doesn't have any accessories.</div>
                <% }else{ %>
                    <div class="pieces">
                        <% items.talismans.filter(a => !a.isInactive).forEach(item => { %>
                            <div tabindex="3" data-item-index="<%= item.item_index %>" class="rich-item piece piece-<%= item.rarity %>-bg">
                                <% if(item.rarity == 'legendary'){ %>
                                    <div class="piece-shine"></div>
                                <% } %>
                                <div class="piece-hover-area"></div>
                                <% itemIcon(item, ['piece-icon']); %>
                            </div>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        <% } %>
        <% if(calculated.pets.length > 0){ %>
            <div class="stat-container stat-pets">
                <div class="stat-header">Pets</div>
                <% for(const [index, pet] of calculated.pets.entries()){
                    if(index == 0 && pet.active){ %>
                        <div class="sub-header">Active Pet</div>
                        <div class="pieces">
                    <% }else if(index == 0){ %>
                        <p></p>
                        <div class="pieces">
                    <% } %>
                        <div data-pet-index="<%= index %>" class="<%= pet.active ? 'active-pet' : '' %> rich-item piece piece-<%= pet.rarity %>-bg">
                            <% if(pet.rarity == 'legendary'){ %>
                                <div class="piece-shine"></div>
                            <% } %>
                            <div class="piece-hover-area"></div>
                            <div style='background-image: url("<%= pet.texture_path %>")' class="piece-icon item-icon custom-icon"></div>
                            <% if(index > 0 || index == 0 && !pet.active){ %>
                                <div class="other-pet-level">Lvl <%= pet.level.level %></div>
                            <% } %>
                        </div>
                    <% if(index == 0 && pet.active) { %>
                        <div class="active-pet-info">
                            <div class="pet-name piece-<%= pet.rarity %>-fg"><%= pet.rarity %> <%= pet.display_name %></div>
                            <div class="pet-level">Level <%= pet.level.level %></div>
                        </div>
                        </div>
                        <% if(calculated.pets.length > 1){ %>
                            <div class="sub-header">Other Pets</div>
                        <% } %>
                        <div class="pieces">
                    <% }
                } %>
                </div>
            </div>
        <% } %>
        <% if(!items.no_inventory){ %>
            <div class="stat-container stat-inventory">
                <div class="stat-header">Inventories</div>
                <% if(items.no_inventory){ %>
                    <div class="no-access"><%= calculated.display_name %> doesn't have inventory access via API enabled. <a target="_blank" class="enable-api" href="/resources/video/enable_api.webm">See here</a> how to enable full API access.</div>
                <% }else{ %>
                    <div id="inventory_container">
                        <div id="inventory_header">
                            <div class="inventory-tab active-inventory" data-inventory-type="inventory">Inventory</div><%
                            if(items.enderchest.length > 0){ %><div class="inventory-tab" data-inventory-type="enderchest">Ender Chest</div><% }
                            if(items.talisman_bag.length > 0){ %><div class="inventory-tab" data-inventory-type="talisman_bag">Accessory Bag</div><% }
                            if(items.potion_bag.length > 0){ %><div class="inventory-tab" data-inventory-type="potion_bag">Potion Bag</div><% }
                            if(items.fishing_bag.length > 0){ %><div class="inventory-tab" data-inventory-type="fishing_bag">Fishing Bag</div><% }
                            if(items.quiver.length > 0){ %><div class="inventory-tab" data-inventory-type="quiver">Quiver</div><% } %>
                        </div>
                        <div class="inventory-view current-inventory" data-inventory-type="inventory">
                            <% for(let i = 9; i < items.inventory.length; i++){ %>
                                <% let item = items.inventory[i]; %>
                                <%= inventorySlot(item); %>
                                <% if((i + 1) % 9 == 0) { %><br><% } %>
                            <% } %>
                            <br>
                            <% for(let i = 0; i < 9; i++){ %>
                                <% let item = items.inventory[i]; %>
                                <%= inventorySlot(item); %>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            </div>
        <% } %>
        <div class="stat-container stat-kills">
            <div class="stat-header">Top Kills & Deaths</div>
            <div class="kills-deaths-container">
                <div class="top-kills">
                    <div class="kills-header">Kills</div>
                    <% calculated.kills.slice(0, 10).forEach((kill, index) => { %>
                        <div class="kill-stat"><div class="kill-rank">#<%= index + 1 %></div><div class="kill-entity"><%= kill.entityName %></div><div class="kill-amount"><%= kill.amount.toLocaleString() %></div></div>
                    <% }); %>
                </div>
                <div class="top-deaths">
                    <div class="kills-header">Deaths</div>
                    <% calculated.deaths.slice(0, 10).forEach((death, index) => { %>
                        <div class="kill-stat"><div class="kill-rank">#<%= index + 1 %></div><div class="kill-entity"><%= death.entityName %></div><div class="kill-amount"><%= death.amount.toLocaleString() %></div></div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>
    <script>
        let items = <%- JSON.stringify(items) %>;
        let calculated = <%- JSON.stringify(calculated) %>;
        console.log(<%- JSON.stringify(items) %>);
        console.log(<%- JSON.stringify(calculated) %>);
    </script>
</body>
</html>
